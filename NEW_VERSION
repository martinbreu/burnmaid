New simple, cheap Burncontroller:

Aktuellen Ofen anders wickeln, zb. so: https://www.kleinanzeigen.de/s-anzeige/brennofen-fuer-bastler/2919864828-282-9244
Oder freihängende wie in meisten toploadern

Raspberry Pi Pico W (Access Point ohne Passwort mit Captive Portal) 
try at first with MicroPython
Einfache Website, erstmal mit Stift und Papier vorzeichnen, von anderen Ofensteuerungen inspirieren lassen, ChatGPT fragen! Für alle extras eine Experten-Seite erstellen, wirklich erstmal nur das einfachste
(aktuelle Temperatur/Solltemperatur, Endzeit, bissl Text mit Schrüh=960 und Glasur=1250 und kurze Anleitung Ton bis fertige Tasse, evtl. ganz unten temperaturlog alle 5 minuten einfach mit uhrzeit für aktuellen brand)
Eingabe(maximale Temperatur bis 1250, Startzeit, sofortiger Stop/Start)

standard Brennkurve mit automatischen Einstieg bei aktueller Temperatur, plus boost-option(so schnell wie möglich)
Nur abbruch bei 3 minuten durchgängig bekannten Messfehler wie nicht verbunden.

Link zu günstigem Brennofen mit minimalistischen Zubehör für Tasse (Ton, Glasur für Geschirr)
Alles auf dreier Steckdose mit Panzertape, auf board löten, evtl. welche kaufen

Auf Etsy+Ebay Kleinanzeigen verkaufen, nicht Github

Eventuell auf Typ S umsteigen, vermutlich verwenden die meisten Öfen diesn Typ:
https://amzn.eu/d/ixFS92q
https://a.co/d/12KlZET
https://www.keramik-kraft.com/de/Ofenbau--Reparatur/Temperaturmessung/Thermoelemente-Platin-Typ-S/Thermoelement-Typ-S-mit-Kopf-l-12cm-.html?sel=1
https://www.berrybase.de/adafruit-universal-thermocouple-verstaerker-max31856-breakout


#Hardware:

Günstiger als adafruit wegen versand und zoll:
https://www.roboter-bausatz.de
https://www.reichelt.de (MAX31855, pico)


Pico W: https://www.adafruit.com/product/5526
Konverter: https://www.adafruit.com/product/269
Messfühler: https://amzn.eu/d/iFODov4

Andere Messfühler:
ca. 25€, konfigurierbar, vermutlich sehr gute Qualität: https://www.testo-sensor.shop/en/sheathed-thermocouple-type-k-with-tc-connector
aktuell, 15€: https://amzn.eu/d/bNoihKq
30€, bessere quali vermutlich: https://www.verpackungsgerate.de/detail/messgerate/zubehor-fur-thermometer/thermoelement-typ-k-fur-hochtemperaturmessung-0-bis-1300-c-lange-300mm.html?utm_source=chatgpt.com
8€, gleicher, testen: 
Typ S: https://amzn.eu/d/7TqoLiH

Netzteil: https://amzn.eu/d/3SkQZpU
Relais: https://amzn.eu/d/c3sy8OK

Steckdose mit Kabel, vorher selber Relais löten testen
https://www.roboter-bausatz.de/p/olimex-schaltsteckdose-230v-16a-fuer-arduino-esp32-und-raspberry-pi-pwr-switch?srsltid=AfmBOoqnMDi0nyoF3FxKP2hvq6GsOwgqU3gw2YkVAi5jhVXUKuhym1EW

Funksteckdose von Brennstuhl mit ca. 6 pro Stück am günstigsten, noch günstiger vermutlich selber Relais löten

Öfen:
Kittec Toplader CB 20 
(1800€, 33*23, mit Thermometer aber ohne steuerung) https://www.keramik-toepfern.de/p/kittec-cb-20-mit-tc-66-keramik-brennofen-abholung-beim-haendler-ohne-brennset
(2150€) https://www.toepferbedarf-brock.de/Kittec-Toplader-CB-20
(1900€, optional ohne Steuerung möglich preis unbekannt) https://www.keramik-brennofenshop.de/49131/toplader_cb_20_ausstattung_cb_20_incl_tc_66

(1900€, 12 Liter, quadratisch: 23*23*23) https://www.toepferbedarf-brock.de/Toplader-Profitherm-PY-12-H

gebraucht:
https://www.kleinanzeigen.de/s-anzeige/brennofen-von/2882863539-282-13512
https://www.kleinanzeigen.de/s-anzeige/emalie-ofen-brennofen-efco-135-mit-zubehoer/2930988695-282-2935
https://www.kleinanzeigen.de/s-anzeige/brennofen-voll-funktionsfaehig/2928592522-282-14101
https://www.kleinanzeigen.de/s-anzeige/naber-l51-s-schmelzofen-brennofen-8-toepferbuecher/2943726098-282-56






einfacher:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Keramik Brennofen Steuerung</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #f4f4f4;
        }

        .container {
            width: 90%;
            max-width: 400px;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            font-size: 1.5em;
        }

        label {
            display: inline-block;
            margin-right: 10px;
            font-weight: bold;
            width: 120px;
        }

        input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 1em;
        }

        .row {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .info {
            margin: 20px 0;
            text-align: center;
        }

        .info span {
            font-weight: bold;
        }

        button {
            width: 100%;
            padding: 10px;
            background: #007BFF;
            color: #fff;
            border: none;
            border-radius: 4px;
            font-size: 1em;
            cursor: pointer;
        }

        button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Brennofen Steuerung</h1>

        <div class="info">
            <p>Aktuelle Temperatur: <span id="current-temp">--</span> °C</p>
            <label for="start-time">Geplante Startzeit:</label>
            <input type="datetime-local" id="start-time" disabled>
            <label for="end-time">Geplante Endzeit:</label>
            <input type="datetime-local" id="end-time" disabled>
        </div>

        <div class="row">
            <label for="max-temp">Maximale Temperatur (°C):</label>
      











<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Keramik Brennofen Steuerung</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #f4f4f4;
        }

        .container {
            width: 90%;
            max-width: 400px;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            font-size: 1.5em;
        }

        label {
            display: block;
            margin: 15px 0 5px;
            font-weight: bold;
        }

        input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 1em;
        }

        .info {
            margin: 20px 0;
            text-align: center;
        }

        .info span {
            font-weight: bold;
        }

        button {
            width: 100%;
            padding: 10px;
            background: #007BFF;
            color: #fff;
            border: none;
            border-radius: 4px;
            font-size: 1em;
            cursor: pointer;
        }

        button:disabled {
            background: #ccc;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Brennofen Steuerung</h1>

        <div class="info">
            <p>Aktuelle Temperatur: <span id="current-temp">--</span> °C</p>
            <p>Geplante Startzeit: <span id="start-time">--:--</span></p>
            <p>Geplante Endzeit: <span id="end-time">--:--</span></p>
        </div>

        <label for="max-temp">Maximale Temperatur (°C):</label>
        <input type="number" id="max-temp" placeholder="z. B. 1200">

        <label for="start-date-time">Startzeit (Datum und Uhrzeit):</label>
        <input type="datetime-local" id="start-date-time">

        <button id="start-btn">Start</button>
        <button id="stop-btn" disabled>Stop</button>
    </div>

    <script>
        // Elemente referenzieren
        const currentTempEl = document.getElementById('current-temp');
        const startTimeEl = document.getElementById('start-time');
        const endTimeEl = document.getElementById('end-time');
        const maxTempInput = document.getElementById('max-temp');
        const startDateTimeInput = document.getElementById('start-date-time');
        const startBtn = document.getElementById('start-btn');
        const stopBtn = document.getElementById('stop-btn');

        // Daten aktualisieren (Simulation von Daten vom Pico W)
        function updateTemperature(temp) {
            currentTempEl.textContent = temp.toFixed(1);
        }

        function updateStartTime(startTime) {
            startTimeEl.textContent = startTime;
        }

        function updateEndTime(endTime) {
            endTimeEl.textContent = endTime;
        }

        // Start-Button Logik
        startBtn.addEventListener('click', () => {
            const maxTemp = maxTempInput.value;
            const startDateTime = startDateTimeInput.value;

            if (!maxTemp || maxTemp <= 0) {
                alert('Bitte geben Sie eine gültige maximale Temperatur ein.');
                return;
            }

            if (!startDateTime) {
                alert('Bitte geben Sie eine gültige Startzeit ein.');
                return;
            }

            // Daten an den Pico W senden
            fetch('/start', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    maxTemp: parseFloat(maxTemp),
                    startDateTime: startDateTime
                })
            }).then(response => {
                if (response.ok) {
                    alert('Brennofen gestartet!');
                    startBtn.disabled = true;
                    stopBtn.disabled = false;
                    maxTempInput.disabled = true;
                    startDateTimeInput.disabled = true;

                    // Geplante Zeiten aktualisieren
                    updateStartTime(new Date(startDateTime).toLocaleString());
                    const endTime = new Date(new Date(startDateTime).getTime() + 4 * 60 * 60 * 1000); // Beispiel: +4 Stunden
                    updateEndTime(endTime.toLocaleString());
                } else {
                    alert('Fehler beim Starten des Brennofens.');
                }
            });
        });

        // Stop-Button Logik
        stopBtn.addEventListener('click', () => {
            fetch('/stop', { method: 'POST' }).then(response => {
                if (response.ok) {
                    alert('Brennofen gestoppt!');
                    startBtn.disabled = false;
                    stopBtn.disabled = true;
                    maxTempInput.disabled = false;
                    startDateTimeInput.disabled = false;
                } else {
                    alert('Fehler beim Stoppen des Brennofens.');
                }
            });
        });

        // Test-Daten aktualisieren (in der Praxis vom Pico W erhalten)
        setInterval(() => {
            const simulatedTemp = Math.random() * 1300; // Simulierte Temperatur
            updateTemperature(simulatedTemp);
        }, 2000);
    </script>
</body>
</html>

